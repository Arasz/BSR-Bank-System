<?xml version="1.0" encoding="utf-8"?>

<configuration>

  <configSections>
    <section name="entityFramework"
             type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
             requirePermission="false" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>

  <system.diagnostics>
    <sources>
      <source propagateActivity="true" name="System.ServiceModel" switchValue="Error,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add
        type="System.Diagnostics.ConsoleTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="consoleListenr"
        traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack">
        <filter type="" />
      </add>
    </sharedListeners>
  </system.diagnostics>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
  </startup>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Autofac" publicKeyToken="17863af14b0044da" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <add key="bankId" value="00112241" />
    <add key="transferServicesConfiguration" value="..\..\..\Core\InterbankTransferConfiguration.json" />
  </appSettings>

  <system.web>
    <compilation debug="true" />
  </system.web>

  <!-- When deploying the service library project, the content of the config file must be added to the host's
  app.config file. System.Configuration does not support config files for libraries. -->
  <system.serviceModel>

    <serviceHostingEnvironment aspNetCompatibilityEnabled="false" />

    <bindings>
      <basicHttpBinding>
        <binding name="secureBinding">
          <security>
            <message clientCredentialType="UserName" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>

    <services>
      <service name="Service.Bank.Implementation.BankService" behaviorConfiguration="SecureBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="secureBinding"
                  contract="Service.Contracts.IBankService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />

        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:7546" />
          </baseAddresses>
        </host>
      </service>

      <service behaviorConfiguration="RestServiceBehavior"
               name="Service.InterbankTransfer.Implementation.InterbankTransferService">
        <endpoint address="" behaviorConfiguration="webHttpServiceBehavior"
                  binding="webHttpBinding" name="RestEndpoint" contract="Service.Contracts.IInterbankTransferService" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:7878" />
          </baseAddresses>
        </host>
      </service>
    </services>

    <extensions>
      <behaviorExtensions>
        <add name="jsonWebHttp"
             type="Service.InterbankTransfer.Error.JsonErrorWebHttpBehaviorElelement, Service.InterbankTransfer" />
      </behaviorExtensions>
    </extensions>

    <behaviors>
      <serviceBehaviors>

        <behavior name="SecureBehavior">
          <serviceMetadata httpGetEnabled="True" httpsGetEnabled="True" />
          <serviceDebug includeExceptionDetailInFaults="True" />
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom"
                                    customUserNamePasswordValidatorType="Service.Bank.Authentication.CustomUserNamePasswordValidator, Service.Bank" />
          </serviceCredentials>
        </behavior>

        <behavior name="RestServiceBehavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="True" />
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom"
                                    customUserNamePasswordValidatorType="Service.InterbankTransfer.Authentication.CustomUserNamePasswordValidator, Service.InterbankTransfer" />
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>

      <endpointBehaviors>
        <behavior name="webHttpServiceBehavior">
          <!-- Important this is the behavior that makes a normal WCF service to REST based service-->
          <webHttp />
          <jsonWebHttp />
        </behavior>
      </endpointBehaviors>
    </behaviors>
  </system.serviceModel>

  <connectionStrings>
    <add name="BankDataContext"
         connectionString="data source=(LocalDB)\MSSQLLocalDB;attachdbfilename=D:\Library\Documents\GitHub\Active\BSR-Bank-System\DataLayer\BankDatabase.mdf;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework"
         providerName="System.Data.SqlClient" />
  </connectionStrings>

  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient"
                type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>